{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": None,
   "id": "e003a261-4762-4181-a70a-83ab49b9fe41",
   "metadata": {},
   "outputs": [],
   "source": [
    "# üìä Streamlit App: Customer Segmentation Interactive Viewer\n",
    "# Uses: PostgreSQL, pandas, plotly\n",
    "\n",
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import psycopg2\n",
    "import plotly.express as px\n",
    "\n",
    "# ----------------------------\n",
    "# 1Ô∏è‚É£ Page Config\n",
    "# ----------------------------\n",
    "st.set_page_config(\n",
    "    page_title=\"Customer Segmentation Dashboard\",\n",
    "    page_icon=\"üìä\",\n",
    "    layout=\"wide\",\n",
    ")\n",
    "\n",
    "st.title(\"üìä Customer Segmentation & Clustering ‚Äî Streamlit Edition\")\n",
    "\n",
    "# ----------------------------\n",
    "# 2Ô∏è‚É£ Connect to PostgreSQL\n",
    "# ----------------------------\n",
    "@st.cache_resource\n",
    "def get_connection():\n",
    "    return psycopg2.connect(\n",
    "        host=\"localhost\",\n",
    "        database=\"customer_bi\",\n",
    "        user=\"postgres\",\n",
    "        password=\"203010\"\n",
    "    )\n",
    "\n",
    "conn = get_connection()\n",
    "\n",
    "# ----------------------------\n",
    "# 3Ô∏è‚É£ Load Data from Advanced View\n",
    "# ----------------------------\n",
    "@st.cache_data\n",
    "def load_data():\n",
    "    query = \"SELECT * FROM vw_customer_segmentation_enriched\"\n",
    "    df = pd.read_sql_query(query, conn)\n",
    "    return df\n",
    "\n",
    "df = load_data()\n",
    "\n",
    "# ----------------------------\n",
    "# 4Ô∏è‚É£ Sidebar Filters\n",
    "# ----------------------------\n",
    "st.sidebar.header(\"üîç Filters\")\n",
    "\n",
    "segments = st.sidebar.multiselect(\n",
    "    \"Select Segments:\",\n",
    "    options=df['segment'].unique(),\n",
    "    default=df['segment'].unique()\n",
    ")\n",
    "\n",
    "income_range = st.sidebar.slider(\n",
    "    \"Annual Income Range:\",\n",
    "    int(df['annual_income'].min()), int(df['annual_income'].max()),\n",
    "    (int(df['annual_income'].min()), int(df['annual_income'].max()))\n",
    ")\n",
    "\n",
    "# Apply filters\n",
    "df_filtered = df[\n",
    "    (df['segment'].isin(segments)) &\n",
    "    (df['annual_income'].between(*income_range))\n",
    "]\n",
    "\n",
    "# ----------------------------\n",
    "# 5Ô∏è‚É£ KPIs\n",
    "# ----------------------------\n",
    "total_customers = int(df_filtered.shape[0])\n",
    "avg_income = round(df_filtered['annual_income'].mean(), 2)\n",
    "avg_spending = round(df_filtered['spending_score'].mean(), 2)\n",
    "\n",
    "col1, col2, col3 = st.columns(3)\n",
    "col1.metric(\"Total Customers\", total_customers)\n",
    "col2.metric(\"Average Income\", f\"${avg_income}k\")\n",
    "col3.metric(\"Average Spending Score\", avg_spending)\n",
    "\n",
    "# ----------------------------\n",
    "# 6Ô∏è‚É£ Scatter Plot\n",
    "# ----------------------------\n",
    "fig = px.scatter(\n",
    "    df_filtered,\n",
    "    x=\"annual_income\",\n",
    "    y=\"spending_score\",\n",
    "    color=\"segment\",\n",
    "    size=\"spending_score\",\n",
    "    hover_data=['customer_id'],\n",
    "    title=\"Income vs. Spending Score\"\n",
    ")\n",
    "st.plotly_chart(fig, use_container_width=True)\n",
    "\n",
    "# ----------------------------\n",
    "# 7Ô∏è‚É£ Show Data Table\n",
    "# ----------------------------\n",
    "st.subheader(\"üìÑ Filtered Customer Data\")\n",
    "st.dataframe(df_filtered)\n",
    "\n",
    "# ----------------------------\n",
    "# 8Ô∏è‚É£ Download CSV\n",
    "# ----------------------------\n",
    "st.download_button(\n",
    "    \"Download CSV\",\n",
    "    df_filtered.to_csv(index=False).encode('utf-8'),\n",
    "    \"filtered_customers.csv\",\n",
    "    \"text/csv\"\n",
    ")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
